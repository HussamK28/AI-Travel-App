{"ast":null,"code":"var _jsxFileName = \"/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/LoadMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport mapboxgl from 'mapbox-gl'; // Import Mapbox GL\nimport './Styles/LoadMap.css';\nimport axios from 'axios';\n\n// This is the load map function which sets the size of the google map\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadMap() {\n  _s();\n  const containerRef = useRef(null); // Ref for the map container\n  const [location, setLocation] = useState('');\n  const [centre, setCentre] = useState({\n    lat: 51.5074456,\n    lng: -0.1277653\n  }); // Default location (London)\n  const [map, setMap] = useState(null);\n  mapboxgl.accessToken = \"pk.eyJ1IjoiaHVzc2FtazI4IiwiYSI6ImNtYThlcTlyNTE2dXkybHNnNGZwMzEzMGwifQ.kK-mWZCSxk5o87_oISSSYQ\";\n\n  // Initialize the Mapbox map\n  const initializeMap = () => {\n    const mapInstance = new mapboxgl.Map({\n      container: containerRef.current,\n      // The DOM element for the map\n      style: 'mapbox://styles/mapbox/streets-v11',\n      // Map style\n      center: [centre.lng, centre.lat],\n      // Set the center to the default coordinates\n      zoom: 12 // Default zoom level\n    });\n\n    // Add navigation controls (zoom and rotation)\n    mapInstance.addControl(new mapboxgl.NavigationControl(), 'top-left');\n    setMap(mapInstance); // Save the map instance in state for later use\n  };\n\n  // Run initializeMap when the component mounts\n  useEffect(() => {\n    if (!map) {\n      initializeMap();\n    } else {\n      map.setCenter([centre.lng, centre.lat]);\n    }\n  }, [centre, map]); // Re-run this when the center changes or map is null\n\n  // Handle location search\n  const handleLocationSearch = e => {\n    setLocation(e.target.value);\n  };\n  const submitLocation = e => {\n    e.preventDefault();\n    // Geocode the address entered by the user and update the map's center\n    const geocoder = new window.google.maps.Geocoder(); // You can use Google's Geocoder for address-to-coordinates conversion\n    geocoder.geocode({\n      address: location\n    }, (results, status) => {\n      if (status === 'OK' && results.length > 0) {\n        const coords = results[0].geometry.location;\n        setCentre({\n          lat: coords.lat(),\n          lng: coords.lng()\n        });\n      } else {\n        alert('Location not found.');\n      }\n    });\n  };\n\n  // Fetch wheelchair accessible places from an API\n  const fetchWheelchairAccessiblePlaces = async (lat, lon) => {\n    try {\n      const response = await axios.get(`https://wheelmap.org/api/nodes?lat=${lat}&lon=${lon}&distance=1000&wheelchair=yes`, {\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      const wheelchairAccessibleMarkers = response.data.nodes.map(place => ({\n        lat: place.lat,\n        lng: place.lon,\n        name: place.name,\n        wheelchair: place.wheelchair\n      }));\n      console.log(\"WheelMap Markers: \", wheelchairAccessibleMarkers);\n      return wheelchairAccessibleMarkers;\n    } catch (error) {\n      console.error(\"Error fetching wheelchair accessible places:\", error);\n      return [];\n    }\n  };\n\n  // Add markers to the map\n  const addMarkers = places => {\n    places.forEach(place => {\n      new mapboxgl.Marker().setLngLat([place.lng, place.lat]) // Set marker position\n      .setPopup(new mapboxgl.Popup().setHTML(`<h3>${place.name}</h3><p>Accessible: ${place.wheelchair}</p>`)).addTo(map); // Add the marker to the map\n    });\n  };\n\n  // Handle submitting the form to search for places\n  const submitForm = async e => {\n    e.preventDefault();\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      address: location\n    }, async (results, status) => {\n      if (status === 'OK' && results.length > 0) {\n        const coords = results[0].geometry.location;\n        setCentre({\n          lat: coords.lat(),\n          lng: coords.lng()\n        });\n\n        // Fetch wheelchair accessible places and add them as markers on the map\n        const wheelchairMarkers = await fetchWheelchairAccessiblePlaces(coords.lat(), coords.lng());\n        addMarkers(wheelchairMarkers);\n      } else {\n        alert('Location not found.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Find Activities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Location\",\n          value: location,\n          onChange: handleLocationSearch,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef // Attach the ref to the map container\n      ,\n      style: {\n        height: '650px',\n        width: '100%'\n      } // Map container style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(LoadMap, \"NNCVurCu9R9sA9roguxo9/PiE8s=\");\n_c = LoadMap;\nexport default LoadMap;\nvar _c;\n$RefreshReg$(_c, \"LoadMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","mapboxgl","axios","jsxDEV","_jsxDEV","LoadMap","_s","containerRef","location","setLocation","centre","setCentre","lat","lng","map","setMap","accessToken","initializeMap","mapInstance","Map","container","current","style","center","zoom","addControl","NavigationControl","setCenter","handleLocationSearch","e","target","value","submitLocation","preventDefault","geocoder","window","google","maps","Geocoder","geocode","address","results","status","length","coords","geometry","alert","fetchWheelchairAccessiblePlaces","lon","response","get","headers","wheelchairAccessibleMarkers","data","nodes","place","name","wheelchair","console","log","error","addMarkers","places","forEach","Marker","setLngLat","setPopup","Popup","setHTML","addTo","submitForm","wheelchairMarkers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","ref","height","width","_c","$RefreshReg$"],"sources":["/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/LoadMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport mapboxgl from 'mapbox-gl';  // Import Mapbox GL\nimport './Styles/LoadMap.css';\nimport axios from 'axios';\n\n// This is the load map function which sets the size of the google map\nfunction LoadMap() {\n  const containerRef = useRef(null);  // Ref for the map container\n  const [location, setLocation] = useState('');\n  const [centre, setCentre] = useState({ lat: 51.5074456, lng: -0.1277653 });  // Default location (London)\n  const [map, setMap] = useState(null);\n\n  mapboxgl.accessToken = \"pk.eyJ1IjoiaHVzc2FtazI4IiwiYSI6ImNtYThlcTlyNTE2dXkybHNnNGZwMzEzMGwifQ.kK-mWZCSxk5o87_oISSSYQ\"\n\n  // Initialize the Mapbox map\n  const initializeMap = () => {\n    const mapInstance = new mapboxgl.Map({\n      container: containerRef.current,  // The DOM element for the map\n      style: 'mapbox://styles/mapbox/streets-v11',  // Map style\n      center: [centre.lng, centre.lat],  // Set the center to the default coordinates\n      zoom: 12  // Default zoom level\n    });\n\n    // Add navigation controls (zoom and rotation)\n    mapInstance.addControl(new mapboxgl.NavigationControl(), 'top-left');\n    setMap(mapInstance);  // Save the map instance in state for later use\n  };\n\n  // Run initializeMap when the component mounts\n  useEffect(() => {\n    if (!map) {\n      initializeMap();\n    } else {\n      map.setCenter([centre.lng, centre.lat]);\n    }\n  }, [centre, map]);  // Re-run this when the center changes or map is null\n\n  // Handle location search\n  const handleLocationSearch = (e) => {\n    setLocation(e.target.value);\n  };\n\n  const submitLocation = (e) => {\n    e.preventDefault();\n    // Geocode the address entered by the user and update the map's center\n    const geocoder = new window.google.maps.Geocoder();  // You can use Google's Geocoder for address-to-coordinates conversion\n    geocoder.geocode({ address: location }, (results, status) => {\n      if (status === 'OK' && results.length > 0) {\n        const coords = results[0].geometry.location;\n        setCentre({ lat: coords.lat(), lng: coords.lng() });\n      } else {\n        alert('Location not found.');\n      }\n    });\n  };\n\n  // Fetch wheelchair accessible places from an API\n  const fetchWheelchairAccessiblePlaces = async (lat, lon) => {\n    try {\n      const response = await axios.get(`https://wheelmap.org/api/nodes?lat=${lat}&lon=${lon}&distance=1000&wheelchair=yes`, {\n        headers: {\n          'Accept': 'application/json',\n        }\n      });\n\n      const wheelchairAccessibleMarkers = response.data.nodes.map(place => ({\n        lat: place.lat,\n        lng: place.lon,\n        name: place.name,\n        wheelchair: place.wheelchair,\n      }));\n      console.log(\"WheelMap Markers: \", wheelchairAccessibleMarkers);\n      return wheelchairAccessibleMarkers;\n    } catch (error) {\n      console.error(\"Error fetching wheelchair accessible places:\", error);\n      return [];\n    }\n  };\n\n  // Add markers to the map\n  const addMarkers = (places) => {\n    places.forEach(place => {\n      new mapboxgl.Marker()\n        .setLngLat([place.lng, place.lat])  // Set marker position\n        .setPopup(new mapboxgl.Popup().setHTML(`<h3>${place.name}</h3><p>Accessible: ${place.wheelchair}</p>`))\n        .addTo(map);  // Add the marker to the map\n    });\n  };\n\n  // Handle submitting the form to search for places\n  const submitForm = async (e) => {\n    e.preventDefault();\n    const geocoder = new window.google.maps.Geocoder();\n\n    geocoder.geocode({ address: location }, async (results, status) => {\n      if (status === 'OK' && results.length > 0) {\n        const coords = results[0].geometry.location;\n        setCentre({ lat: coords.lat(), lng: coords.lng() });\n\n        // Fetch wheelchair accessible places and add them as markers on the map\n        const wheelchairMarkers = await fetchWheelchairAccessiblePlaces(coords.lat(), coords.lng());\n        addMarkers(wheelchairMarkers);\n      } else {\n        alert('Location not found.');\n      }\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Find Activities</h1>\n      <form onSubmit={submitForm}>\n        <div className=\"location\">\n          <label>Location:</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your Location\"\n            value={location}\n            onChange={handleLocationSearch}\n            required\n          />\n          <button className=\"submit-button\" type=\"submit\">Search</button>\n        </div>\n      </form>\n\n      {/* Map container */}\n      <div\n        ref={containerRef}  // Attach the ref to the map container\n        style={{ height: '650px', width: '100%' }}  // Map container style\n      ></div>\n    </div>\n  );\n}\n\nexport default LoadMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}