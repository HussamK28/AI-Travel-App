{"ast":null,"code":"var _jsxFileName = \"/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/Flights.js\",\n  _s = $RefreshSig$();\n// Imports all necessary modules needed for this page\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { GenerateNewToken } from \"./APIs/FlightsAPI\";\nimport './Styles/Flights.css';\n\n// Defines the Flights function for this page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flights = () => {\n  _s();\n  var _flightData$data;\n  // Here are the getter and setter variables that are used in the form below. \n  // UseState sets the setter variables to a default value\n  const [depAirport, setDepAirport] = useState(\"\");\n  const [arrAirport, setArrAirport] = useState(\"\");\n  const [depDate, setDepDate] = useState(\"\");\n  const [retDate, setRetDate] = useState(\"\");\n  const [flightData, setFlightData] = useState(null);\n  const [numAdults, setNumAdults] = useState(0);\n  const [numChildren, setNumChildren] = useState(0);\n  const [numInfants, setNumInfants] = useState(0);\n  // These functions set the setter variables to its new values when changed on the form\n  const newDepAirport = e => {\n    setDepAirport(e.target.value);\n  };\n  const newArrAirport = e => {\n    setArrAirport(e.target.value);\n  };\n  const newDepDate = e => {\n    setDepDate(e.target.value);\n  };\n  const newRetDate = e => {\n    setRetDate(e.target.value);\n  };\n  const newNumAdults = e => {\n    setNumAdults(e.target.value);\n  };\n  const newNumChildren = e => {\n    setNumChildren(e.target.value);\n  };\n  const newNumInfants = e => {\n    setNumInfants(e.target.value);\n  };\n\n  // This function adds the flights the user selects from the data below into the database\n  const addFlights = async (flightOffer, itinerary, segment, depDate, retDate, iIndex) => {\n    // Gets the userID which has been stored in local storage\n    const userID = localStorage.getItem(\"userID\");\n    if (!userID) {\n      alert(\"Please log in to add flights\");\n    }\n    const airline = segment.carrierCode;\n    const flightNum = segment.number;\n    const departureAirport = segment.departure.iataCode;\n    let departureDate = \"\";\n    // checks if flight is either outbound or inbound and assigns the correct date according to user inputs\n    if (iIndex % 2 === 1) {\n      departureDate = depDate;\n    } else {\n      departureDate = retDate;\n    }\n\n    // Departure and arrival time are only using the hours and minutes elements from the UTC\n    const departureTime = segment.departure.at.split(\"T\")[1].slice(0, 5);\n    const arrivalAirport = segment.arrival.iataCode;\n    const arrivalTime = segment.arrival.at.split(\"T\")[1].slice(0, 5);\n    const duration = itinerary.duration.replace(\"PT\", \"\");\n    const price = flightOffer.price.total;\n    // sends to addFlights view in views.py on the backend to send the user input to the database using the following\n    // parameters\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/addFlights/\", {\n        airline: airline,\n        flightNum: flightNum,\n        departureAirport: departureAirport,\n        departureDate: departureDate,\n        departureTime: departureTime,\n        arrivalAirport: arrivalAirport,\n        arrivalTime: arrivalTime,\n        duration: duration,\n        price: price,\n        userID: userID\n      });\n      // User is sent a pop-up message saying either it was correctly added to database or not if there is errors\n      alert(response.data.message || \"Added to itinerary\");\n    } catch (error) {\n      console.error(error);\n      alert(\"We were unable to add flight\");\n    }\n  };\n\n  // This function fetches the data\n  const fetchData = async () => {\n    try {\n      // Generates a new token if previous access token has expired\n      const apiAccessToken = await GenerateNewToken();\n      // Calls the Amadeus API using the URL and the below parameters\n      const response = await axios.get('https://test.api.amadeus.com/v2/shopping/flight-offers', {\n        headers: {\n          'Authorization': `Bearer ${apiAccessToken}`\n        },\n        params: {\n          originLocationCode: depAirport,\n          destinationLocationCode: arrAirport,\n          departureDate: depDate,\n          returnDate: retDate,\n          adults: numAdults,\n          children: numChildren,\n          infants: numInfants,\n          nonStop: true,\n          currencyCode: 'GBP',\n          max: 20\n        }\n      });\n      // sets flightData varible using the response from the API and converts it to a JSON\n      setFlightData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  // This function runs when search button is clicked, this checks for any errors and then performs the API call function\n  const submitForm = e => {\n    e.preventDefault();\n    if (depDate > retDate) {\n      alert(\"Return dates must not be in the past!\");\n    }\n    if (numAdults == 0 && numChildren == 0 && numInfants == 0) {\n      alert(\"You must have at least 1 person travelling on this booking\");\n    }\n    fetchData();\n  };\n\n  // Below is the form element where users can enter the details needed to search for a flight.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search for Flights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"departure-airport\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter 3 Letter IATA airport code\",\n          value: depAirport,\n          maxLength: 3,\n          onChange: newDepAirport,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrival-airport\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter 3 Letter IATA airport code\",\n          maxLength: 3,\n          value: arrAirport,\n          onChange: newArrAirport,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"departure-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Departure Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: depDate,\n          onChange: newDepDate,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"return-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Return Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: retDate,\n          onChange: newRetDate,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"people\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Adults (13+):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numAdults,\n          onChange: newNumAdults,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Children (2-12):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numChildren,\n          onChange: newNumChildren,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Infants (0-2):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numInfants,\n          onChange: newNumInfants,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flights-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          children: \"Find Flights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), (flightData === null || flightData === void 0 ? void 0 : (_flightData$data = flightData.data) === null || _flightData$data === void 0 ? void 0 : _flightData$data.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: flightData.data.map((flightOffer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flight-offer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Option \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: \\xA3\", flightOffer.price.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this), flightOffer.itineraries.map((itinerary, iIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itinerary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Itinerary \", iIndex + 1, \" (Duration: \", itinerary.duration.replace(\"PT\", \"\"), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 37\n          }, this), itinerary.segments.map((segment, sIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"segment\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Segment \", sIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Airline:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 48\n              }, this), \" \", segment.carrierCode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Flight Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 48\n              }, this), \" \", segment.number]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Departure Airport:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 48\n              }, this), \" \", segment.departure.iataCode, \" (Terminal \", segment.departure.terminal || \"N/A\", \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Departure Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 48\n              }, this), \" \", segment.departure.at.split(\"T\")[1].slice(0, 5)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Arrival Airport:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 48\n              }, this), \" \", segment.arrival.iataCode, \" (Terminal \", segment.arrival.terminal || \"N/A\", \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Arrival Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 48\n              }, this), \" \", segment.arrival.at.split(\"T\")[1].slice(0, 5)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Segment Duration:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 48\n              }, this), \" \", segment.duration.replace(\"PT\", \"\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addFlights(flightOffer, itinerary, segment, depDate, retDate, iIndex),\n              children: \"Add Flight to Itinerary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 45\n            }, this)]\n          }, sIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 41\n          }, this))]\n        }, iIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 33\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(Flights, \"u/t89qEKgsQ/EDw9dXRpZ9X9KrA=\");\n_c = Flights;\nexport default Flights;\nvar _c;\n$RefreshReg$(_c, \"Flights\");","map":{"version":3,"names":["React","useState","axios","GenerateNewToken","jsxDEV","_jsxDEV","Flights","_s","_flightData$data","depAirport","setDepAirport","arrAirport","setArrAirport","depDate","setDepDate","retDate","setRetDate","flightData","setFlightData","numAdults","setNumAdults","numChildren","setNumChildren","numInfants","setNumInfants","newDepAirport","e","target","value","newArrAirport","newDepDate","newRetDate","newNumAdults","newNumChildren","newNumInfants","addFlights","flightOffer","itinerary","segment","iIndex","userID","localStorage","getItem","alert","airline","carrierCode","flightNum","number","departureAirport","departure","iataCode","departureDate","departureTime","at","split","slice","arrivalAirport","arrival","arrivalTime","duration","replace","price","total","response","post","data","message","error","console","fetchData","apiAccessToken","get","headers","params","originLocationCode","destinationLocationCode","returnDate","adults","children","infants","nonStop","currencyCode","max","submitForm","preventDefault","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","maxLength","onChange","required","length","map","index","itineraries","segments","sIndex","terminal","onClick","_c","$RefreshReg$"],"sources":["/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/Flights.js"],"sourcesContent":["// Imports all necessary modules needed for this page\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { GenerateNewToken } from \"./APIs/FlightsAPI\";\nimport './Styles/Flights.css'\n\n// Defines the Flights function for this page\nconst Flights = () => {\n    // Here are the getter and setter variables that are used in the form below. \n    // UseState sets the setter variables to a default value\n    const [depAirport, setDepAirport] = useState(\"\");\n    const [arrAirport, setArrAirport] = useState(\"\");\n    const [depDate, setDepDate] = useState(\"\");\n    const [retDate, setRetDate] = useState(\"\");\n    const [flightData, setFlightData] = useState(null);\n    const [numAdults, setNumAdults] = useState(0);\n    const [numChildren, setNumChildren] = useState(0);\n    const [numInfants, setNumInfants] = useState(0);\n    // These functions set the setter variables to its new values when changed on the form\n    const newDepAirport = (e) => {\n        setDepAirport(e.target.value);\n    }\n    const newArrAirport = (e) => {\n        setArrAirport(e.target.value);\n    }\n    const newDepDate = (e) => {\n        setDepDate(e.target.value);\n    }\n    const newRetDate = (e) => {\n        setRetDate(e.target.value);\n    }\n    const newNumAdults = (e) => {\n        setNumAdults(e.target.value);\n    }\n    const newNumChildren = (e) => {\n        setNumChildren(e.target.value);\n    }\n    const newNumInfants = (e) => {\n        setNumInfants(e.target.value);\n    }\n\n    // This function adds the flights the user selects from the data below into the database\n    const addFlights = async (flightOffer, itinerary, segment, depDate, retDate, iIndex) => {\n        // Gets the userID which has been stored in local storage\n        const userID = localStorage.getItem(\"userID\")\n        if(!userID) {\n            alert(\"Please log in to add flights\")\n        }\n        const airline = segment.carrierCode\n        const flightNum = segment.number\n        const departureAirport = segment.departure.iataCode\n        let departureDate = \"\";\n        // checks if flight is either outbound or inbound and assigns the correct date according to user inputs\n        if(iIndex % 2 === 1) {\n            departureDate = depDate\n        }\n        else {\n            departureDate = retDate\n        }\n\n        // Departure and arrival time are only using the hours and minutes elements from the UTC\n        const departureTime = segment.departure.at.split(\"T\")[1].slice(0, 5)\n        const arrivalAirport = segment.arrival.iataCode\n        const arrivalTime = segment.arrival.at.split(\"T\")[1].slice(0, 5)\n        const duration = itinerary.duration.replace(\"PT\", \"\")\n        const price = flightOffer.price.total\n        // sends to addFlights view in views.py on the backend to send the user input to the database using the following\n        // parameters\n        try {\n            const response = await axios.post(\"http://127.0.0.1:8000/addFlights/\", {\n                airline: airline,\n                flightNum: flightNum,\n                departureAirport: departureAirport,\n                departureDate: departureDate,\n                departureTime: departureTime,\n                arrivalAirport: arrivalAirport,\n                arrivalTime: arrivalTime,\n                duration: duration,\n                price: price,\n                userID: userID\n\n            });\n            // User is sent a pop-up message saying either it was correctly added to database or not if there is errors\n            alert(response.data.message || \"Added to itinerary\");\n        } catch (error) {\n            console.error(error);\n            alert(\"We were unable to add flight\");\n        }\n    };\n\n    // This function fetches the data\n    const fetchData = async () => {\n        try {\n            // Generates a new token if previous access token has expired\n            const apiAccessToken = await GenerateNewToken();\n            // Calls the Amadeus API using the URL and the below parameters\n            const response = await axios.get('https://test.api.amadeus.com/v2/shopping/flight-offers', {\n                headers: {\n                    'Authorization': `Bearer ${apiAccessToken}`\n                },\n                params: {\n                    originLocationCode: depAirport,\n                    destinationLocationCode: arrAirport,\n                    departureDate: depDate,\n                    returnDate: retDate,\n                    adults: numAdults,\n                    children: numChildren,\n                    infants: numInfants,\n                    nonStop: true,\n                    currencyCode: 'GBP',\n                    max: 20\n                }\n            });\n            // sets flightData varible using the response from the API and converts it to a JSON\n            setFlightData(response.data);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n    // This function runs when search button is clicked, this checks for any errors and then performs the API call function\n    const submitForm = (e) => {\n        e.preventDefault();\n        if (depDate > retDate) {\n            alert(\"Return dates must not be in the past!\")\n        }\n        if (numAdults == 0 && numChildren == 0 && numInfants == 0) {\n            alert(\"You must have at least 1 person travelling on this booking\")\n        } \n        fetchData();\n    };\n\n    // Below is the form element where users can enter the details needed to search for a flight.\n    return (\n        <div className=\"container\">\n            <h1>Search for Flights</h1>\n            <form onSubmit={submitForm}>\n                <div className=\"departure-airport\">\n                    <label>From:</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter 3 Letter IATA airport code\"\n                        value={depAirport}\n                        maxLength={3}\n                        onChange={newDepAirport}\n                        required\n                    />\n                </div>\n\n                <div className=\"arrival-airport\">\n                    <label>To:</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter 3 Letter IATA airport code\"\n                        maxLength={3}\n                        value={arrAirport}\n                        onChange={newArrAirport}\n                        required\n                    />\n                </div>\n\n                <div className=\"departure-date\">\n                    <label>Departure Date:</label>\n                    <input\n                        type=\"date\"\n                        value={depDate}\n                        onChange={newDepDate}\n                        required\n                    />\n                </div>\n\n                <div className=\"return-date\">\n                    <label>Return Date:</label>\n                    <input\n                        type=\"date\"\n                        value={retDate}\n                        onChange={newRetDate}\n                        required\n                    />\n                </div>\n\n                <div className=\"people\">\n                    <label>Adults (13+):</label>\n                    <input\n                        type=\"number\"\n                        value={numAdults}\n                        onChange={newNumAdults}\n                        required\n                    />\n\n                    <label>Children (2-12):</label>\n                    <input\n                        type=\"number\"\n                        value={numChildren}\n                        onChange={newNumChildren}\n                        required\n                    />\n\n                    <label>Infants (0-2):</label>\n                    <input\n                        type=\"number\"\n                        value={numInfants}\n                        onChange={newNumInfants}\n                        required\n                    />\n                </div>\n\n                <div className=\"flights-button\">\n                    <button className=\"submit-button\" type=\"submit\">Find Flights</button>\n                </div>\n            </form>\n\n            {/* Here is the flight data response to the API*/}\n            {flightData?.data?.length > 0 && (\n                <div>\n                    {/* The .map() function iterates through the response data up to the specifed max parameter */}\n                    {/* Here it iterates through the main part of the API and displays the option number for each flight and the price*/}\n                    {flightData.data.map((flightOffer, index) => (\n                        <div key={index} className=\"flight-offer\">\n                            <h2>Option {index + 1}</h2>\n                            <p>Total Price: £{flightOffer.price.total}</p>\n\n                            {/* This section of code iterates within the main flightOffer section into the itineary subsection to find flight duration times*/}\n\n                            {flightOffer.itineraries.map((itinerary, iIndex) => (\n                                <div key={iIndex} className=\"itinerary\">\n                                    <h3>Itinerary {iIndex + 1} (Duration: {itinerary.duration.replace(\"PT\", \"\")})</h3>\n\n                                    {/*  This section iterates through the itineary section and goes into the segment subsection of the API response*/}\n                                    {/* Here we will find the airline code, Flight number, Departure and Arrival times and Airports */}\n                                    {itinerary.segments.map((segment, sIndex) => (\n                                        <div key={sIndex} className=\"segment\">\n                                            <h4>Segment {sIndex + 1}</h4>\n                                            <p><strong>Airline:</strong> {segment.carrierCode}</p>\n                                            <p><strong>Flight Number:</strong> {segment.number}</p>\n                                            <p><strong>Departure Airport:</strong> {segment.departure.iataCode} (Terminal {segment.departure.terminal || \"N/A\"})</p>\n                                            <p><strong>Departure Time:</strong> {segment.departure.at.split(\"T\")[1].slice(0, 5)}</p>\n                                            <p><strong>Arrival Airport:</strong> {segment.arrival.iataCode} (Terminal {segment.arrival.terminal || \"N/A\"})</p>\n                                            <p><strong>Arrival Time:</strong> {segment.arrival.at.split(\"T\")[1].slice(0, 5)}</p>\n                                            <p><strong>Segment Duration:</strong> {segment.duration.replace(\"PT\", \"\")}</p>\n                                            <button onClick={() => addFlights(flightOffer, itinerary, segment, depDate, retDate, iIndex )}>Add Flight to Itinerary</button>\n                                        </div>\n                                    ))}\n                                </div>\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Flights;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,OAAO,sBAAsB;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EAClB;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EAC/C;EACA,MAAMwB,aAAa,GAAIC,CAAC,IAAK;IACzBhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EACD,MAAMC,aAAa,GAAIH,CAAC,IAAK;IACzBd,aAAa,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EACD,MAAME,UAAU,GAAIJ,CAAC,IAAK;IACtBZ,UAAU,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAMG,UAAU,GAAIL,CAAC,IAAK;IACtBV,UAAU,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD,MAAMI,YAAY,GAAIN,CAAC,IAAK;IACxBN,YAAY,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EACD,MAAMK,cAAc,GAAIP,CAAC,IAAK;IAC1BJ,cAAc,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EACD,MAAMM,aAAa,GAAIR,CAAC,IAAK;IACzBF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAED;EACA,MAAMO,UAAU,GAAG,MAAAA,CAAOC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEzB,OAAO,EAAEE,OAAO,EAAEwB,MAAM,KAAK;IACpF;IACA,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,IAAG,CAACF,MAAM,EAAE;MACRG,KAAK,CAAC,8BAA8B,CAAC;IACzC;IACA,MAAMC,OAAO,GAAGN,OAAO,CAACO,WAAW;IACnC,MAAMC,SAAS,GAAGR,OAAO,CAACS,MAAM;IAChC,MAAMC,gBAAgB,GAAGV,OAAO,CAACW,SAAS,CAACC,QAAQ;IACnD,IAAIC,aAAa,GAAG,EAAE;IACtB;IACA,IAAGZ,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;MACjBY,aAAa,GAAGtC,OAAO;IAC3B,CAAC,MACI;MACDsC,aAAa,GAAGpC,OAAO;IAC3B;;IAEA;IACA,MAAMqC,aAAa,GAAGd,OAAO,CAACW,SAAS,CAACI,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACpE,MAAMC,cAAc,GAAGlB,OAAO,CAACmB,OAAO,CAACP,QAAQ;IAC/C,MAAMQ,WAAW,GAAGpB,OAAO,CAACmB,OAAO,CAACJ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAChE,MAAMI,QAAQ,GAAGtB,SAAS,CAACsB,QAAQ,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IACrD,MAAMC,KAAK,GAAGzB,WAAW,CAACyB,KAAK,CAACC,KAAK;IACrC;IACA;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM7D,KAAK,CAAC8D,IAAI,CAAC,mCAAmC,EAAE;QACnEpB,OAAO,EAAEA,OAAO;QAChBE,SAAS,EAAEA,SAAS;QACpBE,gBAAgB,EAAEA,gBAAgB;QAClCG,aAAa,EAAEA,aAAa;QAC5BC,aAAa,EAAEA,aAAa;QAC5BI,cAAc,EAAEA,cAAc;QAC9BE,WAAW,EAAEA,WAAW;QACxBC,QAAQ,EAAEA,QAAQ;QAClBE,KAAK,EAAEA,KAAK;QACZrB,MAAM,EAAEA;MAEZ,CAAC,CAAC;MACF;MACAG,KAAK,CAACoB,QAAQ,CAACE,IAAI,CAACC,OAAO,IAAI,oBAAoB,CAAC;IACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBxB,KAAK,CAAC,8BAA8B,CAAC;IACzC;EACJ,CAAC;;EAED;EACA,MAAM0B,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA;MACA,MAAMC,cAAc,GAAG,MAAMnE,gBAAgB,CAAC,CAAC;MAC/C;MACA,MAAM4D,QAAQ,GAAG,MAAM7D,KAAK,CAACqE,GAAG,CAAC,wDAAwD,EAAE;QACvFC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUF,cAAc;QAC7C,CAAC;QACDG,MAAM,EAAE;UACJC,kBAAkB,EAAEjE,UAAU;UAC9BkE,uBAAuB,EAAEhE,UAAU;UACnCwC,aAAa,EAAEtC,OAAO;UACtB+D,UAAU,EAAE7D,OAAO;UACnB8D,MAAM,EAAE1D,SAAS;UACjB2D,QAAQ,EAAEzD,WAAW;UACrB0D,OAAO,EAAExD,UAAU;UACnByD,OAAO,EAAE,IAAI;UACbC,YAAY,EAAE,KAAK;UACnBC,GAAG,EAAE;QACT;MACJ,CAAC,CAAC;MACF;MACAhE,aAAa,CAAC6C,QAAQ,CAACE,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EACD;EACA,MAAMgB,UAAU,GAAIzD,CAAC,IAAK;IACtBA,CAAC,CAAC0D,cAAc,CAAC,CAAC;IAClB,IAAIvE,OAAO,GAAGE,OAAO,EAAE;MACnB4B,KAAK,CAAC,uCAAuC,CAAC;IAClD;IACA,IAAIxB,SAAS,IAAI,CAAC,IAAIE,WAAW,IAAI,CAAC,IAAIE,UAAU,IAAI,CAAC,EAAE;MACvDoB,KAAK,CAAC,4DAA4D,CAAC;IACvE;IACA0B,SAAS,CAAC,CAAC;EACf,CAAC;;EAED;EACA,oBACIhE,OAAA;IAAKgF,SAAS,EAAC,WAAW;IAAAP,QAAA,gBACtBzE,OAAA;MAAAyE,QAAA,EAAI;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BpF,OAAA;MAAMqF,QAAQ,EAAEP,UAAW;MAAAL,QAAA,gBACvBzE,OAAA;QAAKgF,SAAS,EAAC,mBAAmB;QAAAP,QAAA,gBAC9BzE,OAAA;UAAAyE,QAAA,EAAO;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBpF,OAAA;UACIsF,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,kCAAkC;UAC9ChE,KAAK,EAAEnB,UAAW;UAClBoF,SAAS,EAAE,CAAE;UACbC,QAAQ,EAAErE,aAAc;UACxBsE,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENpF,OAAA;QAAKgF,SAAS,EAAC,iBAAiB;QAAAP,QAAA,gBAC5BzE,OAAA;UAAAyE,QAAA,EAAO;QAAG;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClBpF,OAAA;UACIsF,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,kCAAkC;UAC9CC,SAAS,EAAE,CAAE;UACbjE,KAAK,EAAEjB,UAAW;UAClBmF,QAAQ,EAAEjE,aAAc;UACxBkE,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENpF,OAAA;QAAKgF,SAAS,EAAC,gBAAgB;QAAAP,QAAA,gBAC3BzE,OAAA;UAAAyE,QAAA,EAAO;QAAe;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9BpF,OAAA;UACIsF,IAAI,EAAC,MAAM;UACX/D,KAAK,EAAEf,OAAQ;UACfiF,QAAQ,EAAEhE,UAAW;UACrBiE,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENpF,OAAA;QAAKgF,SAAS,EAAC,aAAa;QAAAP,QAAA,gBACxBzE,OAAA;UAAAyE,QAAA,EAAO;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BpF,OAAA;UACIsF,IAAI,EAAC,MAAM;UACX/D,KAAK,EAAEb,OAAQ;UACf+E,QAAQ,EAAE/D,UAAW;UACrBgE,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENpF,OAAA;QAAKgF,SAAS,EAAC,QAAQ;QAAAP,QAAA,gBACnBzE,OAAA;UAAAyE,QAAA,EAAO;QAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5BpF,OAAA;UACIsF,IAAI,EAAC,QAAQ;UACb/D,KAAK,EAAET,SAAU;UACjB2E,QAAQ,EAAE9D,YAAa;UACvB+D,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eAEFpF,OAAA;UAAAyE,QAAA,EAAO;QAAgB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/BpF,OAAA;UACIsF,IAAI,EAAC,QAAQ;UACb/D,KAAK,EAAEP,WAAY;UACnByE,QAAQ,EAAE7D,cAAe;UACzB8D,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eAEFpF,OAAA;UAAAyE,QAAA,EAAO;QAAc;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7BpF,OAAA;UACIsF,IAAI,EAAC,QAAQ;UACb/D,KAAK,EAAEL,UAAW;UAClBuE,QAAQ,EAAE5D,aAAc;UACxB6D,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENpF,OAAA;QAAKgF,SAAS,EAAC,gBAAgB;QAAAP,QAAA,eAC3BzE,OAAA;UAAQgF,SAAS,EAAC,eAAe;UAACM,IAAI,EAAC,QAAQ;UAAAb,QAAA,EAAC;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAGN,CAAAxE,UAAU,aAAVA,UAAU,wBAAAT,gBAAA,GAAVS,UAAU,CAAEgD,IAAI,cAAAzD,gBAAA,uBAAhBA,gBAAA,CAAkBwF,MAAM,IAAG,CAAC,iBACzB3F,OAAA;MAAAyE,QAAA,EAGK7D,UAAU,CAACgD,IAAI,CAACgC,GAAG,CAAC,CAAC7D,WAAW,EAAE8D,KAAK,kBACpC7F,OAAA;QAAiBgF,SAAS,EAAC,cAAc;QAAAP,QAAA,gBACrCzE,OAAA;UAAAyE,QAAA,GAAI,SAAO,EAACoB,KAAK,GAAG,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3BpF,OAAA;UAAAyE,QAAA,GAAG,mBAAc,EAAC1C,WAAW,CAACyB,KAAK,CAACC,KAAK;QAAA;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAI7CrD,WAAW,CAAC+D,WAAW,CAACF,GAAG,CAAC,CAAC5D,SAAS,EAAEE,MAAM,kBAC3ClC,OAAA;UAAkBgF,SAAS,EAAC,WAAW;UAAAP,QAAA,gBACnCzE,OAAA;YAAAyE,QAAA,GAAI,YAAU,EAACvC,MAAM,GAAG,CAAC,EAAC,cAAY,EAACF,SAAS,CAACsB,QAAQ,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAC,GAAC;UAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAIjFpD,SAAS,CAAC+D,QAAQ,CAACH,GAAG,CAAC,CAAC3D,OAAO,EAAE+D,MAAM,kBACpChG,OAAA;YAAkBgF,SAAS,EAAC,SAAS;YAAAP,QAAA,gBACjCzE,OAAA;cAAAyE,QAAA,GAAI,UAAQ,EAACuB,MAAM,GAAG,CAAC;YAAA;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BpF,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAQ;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnD,OAAO,CAACO,WAAW;YAAA;cAAAyC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtDpF,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAc;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnD,OAAO,CAACS,MAAM;YAAA;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvDpF,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAkB;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnD,OAAO,CAACW,SAAS,CAACC,QAAQ,EAAC,aAAW,EAACZ,OAAO,CAACW,SAAS,CAACqD,QAAQ,IAAI,KAAK,EAAC,GAAC;YAAA;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACxHpF,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAe;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnD,OAAO,CAACW,SAAS,CAACI,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YAAA;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxFpF,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAgB;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnD,OAAO,CAACmB,OAAO,CAACP,QAAQ,EAAC,aAAW,EAACZ,OAAO,CAACmB,OAAO,CAAC6C,QAAQ,IAAI,KAAK,EAAC,GAAC;YAAA;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAClHpF,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAa;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnD,OAAO,CAACmB,OAAO,CAACJ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YAAA;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpFpF,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAiB;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACnD,OAAO,CAACqB,QAAQ,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;YAAA;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9EpF,OAAA;cAAQkG,OAAO,EAAEA,CAAA,KAAMpE,UAAU,CAACC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEzB,OAAO,EAAEE,OAAO,EAAEwB,MAAO,CAAE;cAAAuC,QAAA,EAAC;YAAuB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GATzHY,MAAM;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUX,CACR,CAAC;QAAA,GAjBIlD,MAAM;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBX,CACR,CAAC;MAAA,GA1BIS,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA2BV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAClF,EAAA,CAnPID,OAAO;AAAAkG,EAAA,GAAPlG,OAAO;AAqPb,eAAeA,OAAO;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}