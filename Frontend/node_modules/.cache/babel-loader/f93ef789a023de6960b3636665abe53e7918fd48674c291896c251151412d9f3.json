{"ast":null,"code":"var _jsxFileName = \"/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/Hotels.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { GenerateNewToken } from \"./APIs/FlightsAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hotels = () => {\n  _s();\n  var _hotelData$data;\n  const [location, setLocation] = useState(\"\");\n  const [checkInDate, setCheckInDate] = useState(\"\");\n  const [checkOutDate, setCheckOutDate] = useState(\"\");\n  const [numOfRooms, setNumOfRooms] = useState(0);\n  const [hotelIDInfo, setHotelIDInfo] = useState(null);\n  const [hotelData, setHotelData] = useState(null);\n  const [numAdults, setNumAdults] = useState(0);\n  const newHotelLocation = e => {\n    setLocation(e.target.value);\n  };\n  const newCheckInDate = e => {\n    setCheckInDate(e.target.value);\n  };\n  const newCheckOutDate = e => {\n    setCheckOutDate(e.target.value);\n  };\n  const newNumOfRooms = e => {\n    setNumOfRooms(e.target.value);\n  };\n  const newNumAdults = e => {\n    setNumAdults(e.target.value);\n  };\n  const fetchHotelID = async () => {\n    try {\n      const apiAccessToken = await GenerateNewToken();\n      let cityCode = location.trim().toUpperCase();\n\n      // Resolve city name to cityCode if needed\n      if (cityCode.length !== 3 || /[^A-Z]/.test(cityCode)) {\n        const cityResponse = await axios.get('https://test.api.amadeus.com/v1/reference-data/locations', {\n          headers: {\n            'Authorization': `Bearer ${apiAccessToken}`\n          },\n          params: {\n            keyword: location,\n            subType: 'CITY'\n          }\n        });\n        const cityData = cityResponse.data.data;\n        if (!cityData || cityData.length === 0) {\n          console.log(\"No matching city found.\");\n          setHotelIDInfo(null);\n          return;\n        }\n        cityCode = cityData[0].iataCode;\n        console.log(\"Resolved city code:\", cityCode);\n      }\n\n      // Get hotels by city code\n      const response = await axios.get('https://test.api.amadeus.com/v1/reference-data/locations/hotels/by-city', {\n        headers: {\n          'Authorization': `Bearer ${apiAccessToken}`\n        },\n        params: {\n          cityCode: cityCode\n        }\n      });\n      const hotelIDData = response.data.data;\n      if (!hotelIDData || hotelIDData.length === 0) {\n        console.log(\"No hotels found for this city.\");\n        setHotelIDInfo(null);\n        return;\n      }\n\n      // Loop through hotel IDs to find one with valid offers\n      for (const hotel of hotelIDData) {\n        const hotelId = hotel.hotelId;\n        try {\n          const offersResponse = await axios.get('https://test.api.amadeus.com/v3/shopping/hotel-offers', {\n            headers: {\n              'Authorization': `Bearer ${apiAccessToken}`\n            },\n            params: {\n              hotelIds: hotelId,\n              checkInDate,\n              checkOutDate,\n              adults: numAdults || 1,\n              roomQuantity: numOfRooms || 1,\n              currency: 'GBP'\n            }\n          });\n          const offers = offersResponse.data.data;\n          if (offers && offers.length > 0) {\n            console.log(\"Found hotel with offers:\", hotelId);\n            setHotelIDInfo(hotelId);\n            setHotelData(offersResponse.data);\n            return hotelId;\n          }\n        } catch (offerErr) {\n          // Ignore 400s or no offers, keep looping\n          console.log(`No offers for hotel ID ${hotelId}`);\n        }\n      }\n      console.log(\"No hotels with available offers found.\");\n      setHotelIDInfo(null);\n    } catch (error) {\n      var _error$response;\n      console.log('Error fetching hotel ID:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  const fetchData = async hotelID => {\n    try {\n      const apiAccessToken = await GenerateNewToken();\n      const response = await axios.get('https://test.api.amadeus.com/v3/shopping/hotel-offers', {\n        headers: {\n          'Authorization': `Bearer ${apiAccessToken}`\n        },\n        params: {\n          hotelIds: hotelID,\n          checkInDate: checkInDate,\n          checkOutDate: checkOutDate,\n          adults: numAdults,\n          roomQuantity: numOfRooms,\n          currency: 'GBP'\n        }\n      });\n      setHotelData(response.data);\n    } catch (error) {\n      var _error$response2;\n      console.log('Error fetching hotel data:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    }\n  };\n  const submitForm = async e => {\n    e.preventDefault();\n    try {\n      const hotelIDInfo = await fetchHotelID();\n      if (hotelIDInfo) {\n        fetchData(hotelIDInfo);\n      } else {\n        console.log(\"No hotel ID returned.\");\n      }\n    } catch (error) {\n      console.log(\"Error in submitForm:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search for Hotels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hotel-location\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your destination\",\n          value: location,\n          onChange: newHotelLocation,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-in-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Check In Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: checkInDate,\n          onChange: newCheckInDate,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-out-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Check Out Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: checkOutDate,\n          onChange: newCheckOutDate,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-rooms\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number of Rooms:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: 1,\n          max: 10,\n          value: numOfRooms,\n          onChange: newNumOfRooms,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"people\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Adults (13+):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: 1,\n          max: 9,\n          value: numAdults,\n          onChange: newNumAdults,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          children: \"Find Hotels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), (hotelData === null || hotelData === void 0 ? void 0 : (_hotelData$data = hotelData.data) === null || _hotelData$data === void 0 ? void 0 : _hotelData$data.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hotel-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hotel Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), hotelData.data.map((hotel, index) => {\n        var _hotel$hotel$address, _hotel$hotel$address$, _hotel$hotel$address2, _hotel$hotel$address3, _hotel$hotel$address4;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hotel-card\",\n          style: {\n            border: \"1px solid #ccc\",\n            padding: \"1rem\",\n            marginBottom: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: hotel.hotel.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [(_hotel$hotel$address = hotel.hotel.address) === null || _hotel$hotel$address === void 0 ? void 0 : (_hotel$hotel$address$ = _hotel$hotel$address.lines) === null || _hotel$hotel$address$ === void 0 ? void 0 : _hotel$hotel$address$.join(\", \"), \", \", (_hotel$hotel$address2 = hotel.hotel.address) === null || _hotel$hotel$address2 === void 0 ? void 0 : _hotel$hotel$address2.cityName, \", \", (_hotel$hotel$address3 = hotel.hotel.address) === null || _hotel$hotel$address3 === void 0 ? void 0 : _hotel$hotel$address3.countryCode, \" \", (_hotel$hotel$address4 = hotel.hotel.address) === null || _hotel$hotel$address4 === void 0 ? void 0 : _hotel$hotel$address4.postalCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this), hotel.offers.map((offer, i) => {\n            var _offer$room, _offer$room$typeEstim, _offer$price, _offer$price2, _offer$guests;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"1rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Room Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 40\n                }, this), \" \", (_offer$room = offer.room) === null || _offer$room === void 0 ? void 0 : (_offer$room$typeEstim = _offer$room.typeEstimated) === null || _offer$room$typeEstim === void 0 ? void 0 : _offer$room$typeEstim.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Price (in local currency):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 40\n                }, this), \" \", (_offer$price = offer.price) === null || _offer$price === void 0 ? void 0 : _offer$price.total, \" \", (_offer$price2 = offer.price) === null || _offer$price2 === void 0 ? void 0 : _offer$price2.currency]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Guests:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 40\n                }, this), \" \", (_offer$guests = offer.guests) === null || _offer$guests === void 0 ? void 0 : _offer$guests.adults, \" Adults\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Check-in:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 40\n                }, this), \" \", offer.checkInDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Check-out:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 40\n                }, this), \" \", offer.checkOutDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this);\n          })]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n};\n_s(Hotels, \"sOjgN0ZJidbtO2qXgXEMykklBwI=\");\n_c = Hotels;\nexport default Hotels;\nvar _c;\n$RefreshReg$(_c, \"Hotels\");","map":{"version":3,"names":["React","useState","axios","GenerateNewToken","jsxDEV","_jsxDEV","Hotels","_s","_hotelData$data","location","setLocation","checkInDate","setCheckInDate","checkOutDate","setCheckOutDate","numOfRooms","setNumOfRooms","hotelIDInfo","setHotelIDInfo","hotelData","setHotelData","numAdults","setNumAdults","newHotelLocation","e","target","value","newCheckInDate","newCheckOutDate","newNumOfRooms","newNumAdults","fetchHotelID","apiAccessToken","cityCode","trim","toUpperCase","length","test","cityResponse","get","headers","params","keyword","subType","cityData","data","console","log","iataCode","response","hotelIDData","hotel","hotelId","offersResponse","hotelIds","adults","roomQuantity","currency","offers","offerErr","error","_error$response","message","fetchData","hotelID","_error$response2","submitForm","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","min","max","map","index","_hotel$hotel$address","_hotel$hotel$address$","_hotel$hotel$address2","_hotel$hotel$address3","_hotel$hotel$address4","style","border","padding","marginBottom","name","address","lines","join","cityName","countryCode","postalCode","offer","i","_offer$room","_offer$room$typeEstim","_offer$price","_offer$price2","_offer$guests","marginTop","room","typeEstimated","category","price","total","guests","_c","$RefreshReg$"],"sources":["/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/Hotels.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { GenerateNewToken } from \"./APIs/FlightsAPI\";\nconst Hotels = () => {\n    const [location, setLocation] = useState(\"\")\n    const [checkInDate, setCheckInDate] = useState(\"\")\n    const [checkOutDate, setCheckOutDate] = useState(\"\")\n    const [numOfRooms, setNumOfRooms] = useState(0)\n    const [hotelIDInfo, setHotelIDInfo] = useState(null)\n    const [hotelData, setHotelData] = useState(null)\n    const [numAdults, setNumAdults] = useState(0);\n\n    const newHotelLocation = (e) => {\n        setLocation(e.target.value)\n    }\n\n    const newCheckInDate = (e) => {\n        setCheckInDate(e.target.value)\n    }\n\n    const newCheckOutDate = (e) => {\n        setCheckOutDate(e.target.value)\n    }\n\n\n    const newNumOfRooms = (e) => {\n        setNumOfRooms(e.target.value)\n    }\n\n    const newNumAdults = (e) => {\n        setNumAdults(e.target.value);\n    }\n\n    const fetchHotelID = async () => {\n        try {\n            const apiAccessToken = await GenerateNewToken();\n\n            let cityCode = location.trim().toUpperCase();\n\n            // Resolve city name to cityCode if needed\n            if (cityCode.length !== 3 || /[^A-Z]/.test(cityCode)) {\n                const cityResponse = await axios.get('https://test.api.amadeus.com/v1/reference-data/locations', {\n                    headers: {\n                        'Authorization': `Bearer ${apiAccessToken}`\n                    },\n                    params: {\n                        keyword: location,\n                        subType: 'CITY'\n                    }\n                });\n\n                const cityData = cityResponse.data.data;\n\n                if (!cityData || cityData.length === 0) {\n                    console.log(\"No matching city found.\");\n                    setHotelIDInfo(null);\n                    return;\n                }\n\n                cityCode = cityData[0].iataCode;\n                console.log(\"Resolved city code:\", cityCode);\n            }\n\n            // Get hotels by city code\n            const response = await axios.get('https://test.api.amadeus.com/v1/reference-data/locations/hotels/by-city', {\n                headers: {\n                    'Authorization': `Bearer ${apiAccessToken}`\n                },\n                params: {\n                    cityCode: cityCode\n                }\n            });\n\n            const hotelIDData = response.data.data;\n            if (!hotelIDData || hotelIDData.length === 0) {\n                console.log(\"No hotels found for this city.\");\n                setHotelIDInfo(null);\n                return;\n            }\n\n            // Loop through hotel IDs to find one with valid offers\n            for (const hotel of hotelIDData) {\n                const hotelId = hotel.hotelId;\n\n                try {\n                    const offersResponse = await axios.get('https://test.api.amadeus.com/v3/shopping/hotel-offers', {\n                        headers: {\n                            'Authorization': `Bearer ${apiAccessToken}`\n                        },\n                        params: {\n                            hotelIds: hotelId,\n                            checkInDate,\n                            checkOutDate,\n                            adults: numAdults || 1,\n                            roomQuantity: numOfRooms || 1,\n                            currency: 'GBP'\n                        }\n                    });\n\n                    const offers = offersResponse.data.data;\n\n                    if (offers && offers.length > 0) {\n                        console.log(\"Found hotel with offers:\", hotelId);\n                        setHotelIDInfo(hotelId);\n                        setHotelData(offersResponse.data);\n                        return hotelId;\n                    }\n                } catch (offerErr) {\n                    // Ignore 400s or no offers, keep looping\n                    console.log(`No offers for hotel ID ${hotelId}`);\n                }\n            }\n\n            console.log(\"No hotels with available offers found.\");\n            setHotelIDInfo(null);\n\n        } catch (error) {\n            console.log('Error fetching hotel ID:', error.response?.data || error.message);\n        }\n    };\n\n\n    const fetchData = async (hotelID) => {\n        try {\n            const apiAccessToken = await GenerateNewToken();\n            const response = await axios.get(\n                'https://test.api.amadeus.com/v3/shopping/hotel-offers',\n                {\n                    headers: {\n                        'Authorization': `Bearer ${apiAccessToken}`\n                    },\n                    params: {\n                        hotelIds: hotelID,\n                        checkInDate: checkInDate,\n                        checkOutDate: checkOutDate,\n                        adults: numAdults,\n                        roomQuantity: numOfRooms,\n                        currency: 'GBP'\n                    }\n                }\n            );\n\n            setHotelData(response.data)\n        } catch (error) {\n            console.log('Error fetching hotel data:', error.response?.data || error.message);\n        }\n    }\n\n\n\n    const submitForm = async (e) => {\n        e.preventDefault();\n\n        try {\n            const hotelIDInfo = await fetchHotelID();\n            if (hotelIDInfo) {\n                fetchData(hotelIDInfo)\n            } else {\n                console.log(\"No hotel ID returned.\");\n            }\n        } catch (error) {\n            console.log(\"Error in submitForm:\", error);\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>Search for Hotels</h1>\n            <form onSubmit={submitForm}>\n                <div className=\"hotel-location\">\n                    <label>Location:</label>\n                    <input type=\"text\"\n                        placeholder=\"Enter your destination\"\n                        value={location}\n                        onChange={newHotelLocation}\n                        required></input>\n                </div>\n\n                <div className=\"check-in-date\">\n                    <label>Check In Date:</label>\n                    <input type=\"date\"\n                        value={checkInDate}\n                        onChange={newCheckInDate}\n                        required></input>\n                </div>\n\n                <div className=\"check-out-date\">\n                    <label>Check Out Date:</label>\n                    <input type=\"date\"\n                        value={checkOutDate}\n                        onChange={newCheckOutDate}\n                        required></input>\n\n                </div>\n\n\n                <div className=\"number-rooms\">\n                    <label>Number of Rooms:</label>\n                    <input type=\"number\"\n                        min={1}\n                        max={10}\n                        value={numOfRooms}\n                        onChange={newNumOfRooms}\n                        required></input>\n\n                </div>\n\n                <div className=\"people\">\n                    <label>Adults (13+):</label>\n                    <input\n                        type=\"number\"\n                        min={1}\n                        max={9}\n                        value={numAdults}\n                        onChange={newNumAdults}\n                        required\n                    />\n                </div>\n\n\n                <div className=\"button\">\n                    <button className=\"submit-button\"\n                        type=\"submit\">Find Hotels\n                    </button>\n                </div>\n            </form>\n            {hotelData?.data?.length > 0 && (\n                <div className=\"hotel-results\">\n\n                    <h2>Hotel Results</h2>\n                    {hotelData.data.map((hotel, index) => (\n                        <div key={index} className=\"hotel-card\" style={{ border: \"1px solid #ccc\", padding: \"1rem\", marginBottom: \"1rem\" }}>\n                            <h3>{hotel.hotel.name}</h3>\n                            <p>\n                                {hotel.hotel.address?.lines?.join(\", \")}, {hotel.hotel.address?.cityName}, {hotel.hotel.address?.countryCode} {hotel.hotel.address?.postalCode}\n                            </p>\n                            {hotel.offers.map((offer, i) => (\n                                <div key={i} style={{ marginTop: \"1rem\" }}>\n                                    <p><strong>Room Type:</strong> {offer.room?.typeEstimated?.category}</p>\n                                    <p><strong>Price (in local currency):</strong> {offer.price?.total} {offer.price?.currency}</p>\n                                    <p><strong>Guests:</strong> {offer.guests?.adults} Adults</p>\n                                    <p><strong>Check-in:</strong> {offer.checkInDate}</p>\n                                    <p><strong>Check-out:</strong> {offer.checkOutDate}</p>\n                                </div>\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            )}\n\n\n\n        </div>\n\n    )\n\n}\nexport default Hotels"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMsB,gBAAgB,GAAIC,CAAC,IAAK;IAC5Bd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,cAAc,GAAIH,CAAC,IAAK;IAC1BZ,cAAc,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAME,eAAe,GAAIJ,CAAC,IAAK;IAC3BV,eAAe,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAGD,MAAMG,aAAa,GAAIL,CAAC,IAAK;IACzBR,aAAa,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMI,YAAY,GAAIN,CAAC,IAAK;IACxBF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,cAAc,GAAG,MAAM7B,gBAAgB,CAAC,CAAC;MAE/C,IAAI8B,QAAQ,GAAGxB,QAAQ,CAACyB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;;MAE5C;MACA,IAAIF,QAAQ,CAACG,MAAM,KAAK,CAAC,IAAI,QAAQ,CAACC,IAAI,CAACJ,QAAQ,CAAC,EAAE;QAClD,MAAMK,YAAY,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAAC,0DAA0D,EAAE;UAC7FC,OAAO,EAAE;YACL,eAAe,EAAE,UAAUR,cAAc;UAC7C,CAAC;UACDS,MAAM,EAAE;YACJC,OAAO,EAAEjC,QAAQ;YACjBkC,OAAO,EAAE;UACb;QACJ,CAAC,CAAC;QAEF,MAAMC,QAAQ,GAAGN,YAAY,CAACO,IAAI,CAACA,IAAI;QAEvC,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAACR,MAAM,KAAK,CAAC,EAAE;UACpCU,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;UACtC7B,cAAc,CAAC,IAAI,CAAC;UACpB;QACJ;QAEAe,QAAQ,GAAGW,QAAQ,CAAC,CAAC,CAAC,CAACI,QAAQ;QAC/BF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEd,QAAQ,CAAC;MAChD;;MAEA;MACA,MAAMgB,QAAQ,GAAG,MAAM/C,KAAK,CAACqC,GAAG,CAAC,yEAAyE,EAAE;QACxGC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUR,cAAc;QAC7C,CAAC;QACDS,MAAM,EAAE;UACJR,QAAQ,EAAEA;QACd;MACJ,CAAC,CAAC;MAEF,MAAMiB,WAAW,GAAGD,QAAQ,CAACJ,IAAI,CAACA,IAAI;MACtC,IAAI,CAACK,WAAW,IAAIA,WAAW,CAACd,MAAM,KAAK,CAAC,EAAE;QAC1CU,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QAC7C7B,cAAc,CAAC,IAAI,CAAC;QACpB;MACJ;;MAEA;MACA,KAAK,MAAMiC,KAAK,IAAID,WAAW,EAAE;QAC7B,MAAME,OAAO,GAAGD,KAAK,CAACC,OAAO;QAE7B,IAAI;UACA,MAAMC,cAAc,GAAG,MAAMnD,KAAK,CAACqC,GAAG,CAAC,uDAAuD,EAAE;YAC5FC,OAAO,EAAE;cACL,eAAe,EAAE,UAAUR,cAAc;YAC7C,CAAC;YACDS,MAAM,EAAE;cACJa,QAAQ,EAAEF,OAAO;cACjBzC,WAAW;cACXE,YAAY;cACZ0C,MAAM,EAAElC,SAAS,IAAI,CAAC;cACtBmC,YAAY,EAAEzC,UAAU,IAAI,CAAC;cAC7B0C,QAAQ,EAAE;YACd;UACJ,CAAC,CAAC;UAEF,MAAMC,MAAM,GAAGL,cAAc,CAACR,IAAI,CAACA,IAAI;UAEvC,IAAIa,MAAM,IAAIA,MAAM,CAACtB,MAAM,GAAG,CAAC,EAAE;YAC7BU,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEK,OAAO,CAAC;YAChDlC,cAAc,CAACkC,OAAO,CAAC;YACvBhC,YAAY,CAACiC,cAAc,CAACR,IAAI,CAAC;YACjC,OAAOO,OAAO;UAClB;QACJ,CAAC,CAAC,OAAOO,QAAQ,EAAE;UACf;UACAb,OAAO,CAACC,GAAG,CAAC,0BAA0BK,OAAO,EAAE,CAAC;QACpD;MACJ;MAEAN,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrD7B,cAAc,CAAC,IAAI,CAAC;IAExB,CAAC,CAAC,OAAO0C,KAAK,EAAE;MAAA,IAAAC,eAAA;MACZf,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,EAAAc,eAAA,GAAAD,KAAK,CAACX,QAAQ,cAAAY,eAAA,uBAAdA,eAAA,CAAgBhB,IAAI,KAAIe,KAAK,CAACE,OAAO,CAAC;IAClF;EACJ,CAAC;EAGD,MAAMC,SAAS,GAAG,MAAOC,OAAO,IAAK;IACjC,IAAI;MACA,MAAMhC,cAAc,GAAG,MAAM7B,gBAAgB,CAAC,CAAC;MAC/C,MAAM8C,QAAQ,GAAG,MAAM/C,KAAK,CAACqC,GAAG,CAC5B,uDAAuD,EACvD;QACIC,OAAO,EAAE;UACL,eAAe,EAAE,UAAUR,cAAc;QAC7C,CAAC;QACDS,MAAM,EAAE;UACJa,QAAQ,EAAEU,OAAO;UACjBrD,WAAW,EAAEA,WAAW;UACxBE,YAAY,EAAEA,YAAY;UAC1B0C,MAAM,EAAElC,SAAS;UACjBmC,YAAY,EAAEzC,UAAU;UACxB0C,QAAQ,EAAE;QACd;MACJ,CACJ,CAAC;MAEDrC,YAAY,CAAC6B,QAAQ,CAACJ,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOe,KAAK,EAAE;MAAA,IAAAK,gBAAA;MACZnB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,EAAAkB,gBAAA,GAAAL,KAAK,CAACX,QAAQ,cAAAgB,gBAAA,uBAAdA,gBAAA,CAAgBpB,IAAI,KAAIe,KAAK,CAACE,OAAO,CAAC;IACpF;EACJ,CAAC;EAID,MAAMI,UAAU,GAAG,MAAO1C,CAAC,IAAK;IAC5BA,CAAC,CAAC2C,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMlD,WAAW,GAAG,MAAMc,YAAY,CAAC,CAAC;MACxC,IAAId,WAAW,EAAE;QACb8C,SAAS,CAAC9C,WAAW,CAAC;MAC1B,CAAC,MAAM;QACH6B,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACxC;IACJ,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZd,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEa,KAAK,CAAC;IAC9C;EACJ,CAAC;EAED,oBACIvD,OAAA;IAAK+D,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBhE,OAAA;MAAAgE,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpE,OAAA;MAAMqE,QAAQ,EAAER,UAAW;MAAAG,QAAA,gBACvBhE,OAAA;QAAK+D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BhE,OAAA;UAAAgE,QAAA,EAAO;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBpE,OAAA;UAAOsE,IAAI,EAAC,MAAM;UACdC,WAAW,EAAC,wBAAwB;UACpClD,KAAK,EAAEjB,QAAS;UAChBoE,QAAQ,EAAEtD,gBAAiB;UAC3BuD,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eAENpE,OAAA;QAAK+D,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BhE,OAAA;UAAAgE,QAAA,EAAO;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC7BpE,OAAA;UAAOsE,IAAI,EAAC,MAAM;UACdjD,KAAK,EAAEf,WAAY;UACnBkE,QAAQ,EAAElD,cAAe;UACzBmD,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eAENpE,OAAA;QAAK+D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BhE,OAAA;UAAAgE,QAAA,EAAO;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9BpE,OAAA;UAAOsE,IAAI,EAAC,MAAM;UACdjD,KAAK,EAAEb,YAAa;UACpBgE,QAAQ,EAAEjD,eAAgB;UAC1BkD,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpB,CAAC,eAGNpE,OAAA;QAAK+D,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBhE,OAAA;UAAAgE,QAAA,EAAO;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/BpE,OAAA;UAAOsE,IAAI,EAAC,QAAQ;UAChBI,GAAG,EAAE,CAAE;UACPC,GAAG,EAAE,EAAG;UACRtD,KAAK,EAAEX,UAAW;UAClB8D,QAAQ,EAAEhD,aAAc;UACxBiD,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpB,CAAC,eAENpE,OAAA;QAAK+D,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACnBhE,OAAA;UAAAgE,QAAA,EAAO;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5BpE,OAAA;UACIsE,IAAI,EAAC,QAAQ;UACbI,GAAG,EAAE,CAAE;UACPC,GAAG,EAAE,CAAE;UACPtD,KAAK,EAAEL,SAAU;UACjBwD,QAAQ,EAAE/C,YAAa;UACvBgD,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGNpE,OAAA;QAAK+D,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACnBhE,OAAA;UAAQ+D,SAAS,EAAC,eAAe;UAC7BO,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAClB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACN,CAAAtD,SAAS,aAATA,SAAS,wBAAAX,eAAA,GAATW,SAAS,CAAE0B,IAAI,cAAArC,eAAA,uBAAfA,eAAA,CAAiB4B,MAAM,IAAG,CAAC,iBACxB/B,OAAA;MAAK+D,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAE1BhE,OAAA;QAAAgE,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBtD,SAAS,CAAC0B,IAAI,CAACoC,GAAG,CAAC,CAAC9B,KAAK,EAAE+B,KAAK;QAAA,IAAAC,oBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;QAAA,oBAC7BlF,OAAA;UAAiB+D,SAAS,EAAC,YAAY;UAACoB,KAAK,EAAE;YAAEC,MAAM,EAAE,gBAAgB;YAAEC,OAAO,EAAE,MAAM;YAAEC,YAAY,EAAE;UAAO,CAAE;UAAAtB,QAAA,gBAC/GhE,OAAA;YAAAgE,QAAA,EAAKlB,KAAK,CAACA,KAAK,CAACyC;UAAI;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BpE,OAAA;YAAAgE,QAAA,IAAAc,oBAAA,GACKhC,KAAK,CAACA,KAAK,CAAC0C,OAAO,cAAAV,oBAAA,wBAAAC,qBAAA,GAAnBD,oBAAA,CAAqBW,KAAK,cAAAV,qBAAA,uBAA1BA,qBAAA,CAA4BW,IAAI,CAAC,IAAI,CAAC,EAAC,IAAE,GAAAV,qBAAA,GAAClC,KAAK,CAACA,KAAK,CAAC0C,OAAO,cAAAR,qBAAA,uBAAnBA,qBAAA,CAAqBW,QAAQ,EAAC,IAAE,GAAAV,qBAAA,GAACnC,KAAK,CAACA,KAAK,CAAC0C,OAAO,cAAAP,qBAAA,uBAAnBA,qBAAA,CAAqBW,WAAW,EAAC,GAAC,GAAAV,qBAAA,GAACpC,KAAK,CAACA,KAAK,CAAC0C,OAAO,cAAAN,qBAAA,uBAAnBA,qBAAA,CAAqBW,UAAU;UAAA;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/I,CAAC,EACHtB,KAAK,CAACO,MAAM,CAACuB,GAAG,CAAC,CAACkB,KAAK,EAAEC,CAAC;YAAA,IAAAC,WAAA,EAAAC,qBAAA,EAAAC,YAAA,EAAAC,aAAA,EAAAC,aAAA;YAAA,oBACvBpG,OAAA;cAAamF,KAAK,EAAE;gBAAEkB,SAAS,EAAE;cAAO,CAAE;cAAArC,QAAA,gBACtChE,OAAA;gBAAAgE,QAAA,gBAAGhE,OAAA;kBAAAgE,QAAA,EAAQ;gBAAU;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,GAAA4B,WAAA,GAACF,KAAK,CAACQ,IAAI,cAAAN,WAAA,wBAAAC,qBAAA,GAAVD,WAAA,CAAYO,aAAa,cAAAN,qBAAA,uBAAzBA,qBAAA,CAA2BO,QAAQ;cAAA;gBAAAvC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxEpE,OAAA;gBAAAgE,QAAA,gBAAGhE,OAAA;kBAAAgE,QAAA,EAAQ;gBAA0B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,GAAA8B,YAAA,GAACJ,KAAK,CAACW,KAAK,cAAAP,YAAA,uBAAXA,YAAA,CAAaQ,KAAK,EAAC,GAAC,GAAAP,aAAA,GAACL,KAAK,CAACW,KAAK,cAAAN,aAAA,uBAAXA,aAAA,CAAa/C,QAAQ;cAAA;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC/FpE,OAAA;gBAAAgE,QAAA,gBAAGhE,OAAA;kBAAAgE,QAAA,EAAQ;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,GAAAgC,aAAA,GAACN,KAAK,CAACa,MAAM,cAAAP,aAAA,uBAAZA,aAAA,CAAclD,MAAM,EAAC,SAAO;cAAA;gBAAAe,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eAC7DpE,OAAA;gBAAAgE,QAAA,gBAAGhE,OAAA;kBAAAgE,QAAA,EAAQ;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAAC0B,KAAK,CAACxF,WAAW;cAAA;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrDpE,OAAA;gBAAAgE,QAAA,gBAAGhE,OAAA;kBAAAgE,QAAA,EAAQ;gBAAU;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAAC0B,KAAK,CAACtF,YAAY;cAAA;gBAAAyD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA,GALjD2B,CAAC;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMN,CAAC;UAAA,CACT,CAAC;QAAA,GAbIS,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcV,CAAC;MAAA,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIA,CAAC;AAId,CAAC;AAAAlE,EAAA,CA7PKD,MAAM;AAAA2G,EAAA,GAAN3G,MAAM;AA8PZ,eAAeA,MAAM;AAAA,IAAA2G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}