{"ast":null,"code":"var _jsxFileName = \"/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/LoadMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, Autocomplete } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\nconst defaultCenter = {\n  lat: 40.7128,\n  // Default: New York\n  lng: -74.0060\n};\nfunction PlacesMap() {\n  _s();\n  const mapRef = useRef(null);\n  const [center, setCenter] = useState(defaultCenter);\n  const [places, setPlaces] = useState([]);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const onLoad = map => {\n    mapRef.current = map;\n    loadNearbyPlaces(center, map);\n  };\n  const onPlaceChanged = () => {\n    if (autocomplete !== null) {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        const location = place.geometry.location;\n        const newCenter = {\n          lat: location.lat(),\n          lng: location.lng()\n        };\n        setCenter(newCenter);\n        mapRef.current.panTo(newCenter);\n        loadNearbyPlaces(newCenter, mapRef.current);\n      }\n    }\n  };\n  const loadNearbyPlaces = (location, map) => {\n    const service = new window.google.maps.places.PlacesService(map);\n    const request = {\n      location,\n      radius: 5000,\n      type: ['tourist_attraction']\n    };\n    service.nearbySearch(request, (results, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n        setPlaces(results);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"YOUR_GOOGLE_MAPS_API_KEY\",\n    libraries: ['places'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        onLoad: auto => setAutocomplete(auto),\n        onPlaceChanged: onPlaceChanged,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search a city or place...\",\n          style: {\n            width: '100%',\n            height: '40px',\n            padding: '0 12px',\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 13,\n      onLoad: onLoad,\n      children: places.map((place, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: place.geometry.location,\n        title: place.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(PlacesMap, \"XV/ELWQL+jTAD9a0dD3DUyXRnlA=\");\n_c = PlacesMap;\nexport default PlacesMap;\nvar _c;\n$RefreshReg$(_c, \"PlacesMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GoogleMap","LoadScript","Marker","Autocomplete","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","PlacesMap","_s","mapRef","center","setCenter","places","setPlaces","autocomplete","setAutocomplete","onLoad","map","current","loadNearbyPlaces","onPlaceChanged","place","getPlace","geometry","location","newCenter","panTo","service","window","google","maps","PlacesService","request","radius","type","nearbySearch","results","status","PlacesServiceStatus","OK","googleMapsApiKey","libraries","children","style","marginBottom","auto","placeholder","padding","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","idx","position","title","name","_c","$RefreshReg$"],"sources":["/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/LoadMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  Autocomplete\n} from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '500px'\n};\n\nconst defaultCenter = {\n  lat: 40.7128, // Default: New York\n  lng: -74.0060\n};\n\nfunction PlacesMap() {\n  const mapRef = useRef(null);\n  const [center, setCenter] = useState(defaultCenter);\n  const [places, setPlaces] = useState([]);\n  const [autocomplete, setAutocomplete] = useState(null);\n\n  const onLoad = map => {\n    mapRef.current = map;\n    loadNearbyPlaces(center, map);\n  };\n\n  const onPlaceChanged = () => {\n    if (autocomplete !== null) {\n      const place = autocomplete.getPlace();\n      if (place.geometry) {\n        const location = place.geometry.location;\n        const newCenter = {\n          lat: location.lat(),\n          lng: location.lng()\n        };\n        setCenter(newCenter);\n        mapRef.current.panTo(newCenter);\n        loadNearbyPlaces(newCenter, mapRef.current);\n      }\n    }\n  };\n\n  const loadNearbyPlaces = (location, map) => {\n    const service = new window.google.maps.places.PlacesService(map);\n    const request = {\n      location,\n      radius: 5000,\n      type: ['tourist_attraction']\n    };\n\n    service.nearbySearch(request, (results, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n        setPlaces(results);\n      }\n    });\n  };\n\n  return (\n    <LoadScript\n      googleMapsApiKey=\"YOUR_GOOGLE_MAPS_API_KEY\"\n      libraries={['places']}\n    >\n      <div style={{ marginBottom: '1rem' }}>\n        <Autocomplete\n          onLoad={auto => setAutocomplete(auto)}\n          onPlaceChanged={onPlaceChanged}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Search a city or place...\"\n            style={{\n              width: '100%',\n              height: '40px',\n              padding: '0 12px',\n              fontSize: '16px'\n            }}\n          />\n        </Autocomplete>\n      </div>\n\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={13}\n        onLoad={onLoad}\n      >\n        {places.map((place, idx) => (\n          <Marker\n            key={idx}\n            position={place.geometry.location}\n            title={place.name}\n          />\n        ))}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default PlacesMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}