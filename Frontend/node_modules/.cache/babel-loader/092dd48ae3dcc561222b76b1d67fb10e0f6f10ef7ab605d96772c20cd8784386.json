{"ast":null,"code":"var _jsxFileName = \"/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/LoadMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport './Styles/LoadMap.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadMap() {\n  _s();\n  const containerStyle = {\n    width: '100%',\n    height: '650px'\n  };\n  const defaultCentre = {\n    lat: 51.5074456,\n    lng: -0.1277653\n  };\n  const [location, setLocation] = useState('');\n  const [mapMarkers, setMapMarkers] = useState([]);\n  const [selectedMapMarkers, setSelectedMapMarkers] = useState(null);\n  const [PopupBox, setPopupBox] = useState(false);\n  const [centre, setCentre] = useState(defaultCentre);\n  const mapRef = useRef(null);\n  const newLocation = e => {\n    setLocation(e.target.value);\n  };\n  const fetchOSMWheelchairAccessiblePlaces = async (lat, lon) => {\n    const overpassQuery = `\n      [out:json];\n      (\n        node[wheelchair=\"yes\"](around:5000,${lat},${lon});\n        way[wheelchair=\"yes\"](around:5000,${lat},${lon});\n        relation[wheelchair=\"yes\"](around:5000,${lat},${lon});\n      );\n      out center;\n    `;\n    try {\n      const response = await fetch(\"https://overpass-api.de/api/interpreter\", {\n        method: \"POST\",\n        body: overpassQuery\n      });\n      const data = await response.json();\n      const markers = data.elements.map(element => {\n        var _element$tags;\n        const coords = element.type === \"node\" ? {\n          lat: element.lat,\n          lng: element.lon\n        } : {\n          lat: element.center.lat,\n          lng: element.center.lon\n        };\n        return {\n          lat: coords.lat,\n          lng: coords.lng,\n          name: ((_element$tags = element.tags) === null || _element$tags === void 0 ? void 0 : _element$tags.name) || \"Accessible Place\"\n        };\n      });\n      return markers;\n    } catch (error) {\n      console.error(\"Error fetching Overpass API data:\", error);\n      return [];\n    }\n  };\n  const submitForm = async e => {\n    e.preventDefault();\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      address: location\n    }, async (results, status) => {\n      if (status === 'OK' && results.length > 0) {\n        const coords = results[0].geometry.location;\n        const lat = coords.lat();\n        const lng = coords.lng();\n        setCentre({\n          lat,\n          lng\n        });\n\n        // Fetch only wheelchair accessible places from OSM\n        const accessibleMarkers = await fetchOSMWheelchairAccessiblePlaces(lat, lng);\n        setMapMarkers(accessibleMarkers);\n      } else {\n        alert('Location not found.');\n      }\n    });\n  };\n  const addToItinerary = async placeName => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/addToItinerary/\", {\n        name: placeName\n      });\n      alert(response.data.message || \"Added to itinerary\");\n    } catch (error) {\n      console.error(error);\n      alert(\"We were unable to add attraction\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Find Wheelchair Accessible Activities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Location\",\n          value: location,\n          onChange: newLocation,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      libraries: ['places'],\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: centre,\n        zoom: 12,\n        onLoad: map => mapRef.current = map,\n        children: mapMarkers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: marker.lat,\n            lng: marker.lng\n          },\n          onClick: () => {\n            setSelectedMapMarkers(marker);\n            setPopupBox(true);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), PopupBox && selectedMapMarkers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      onClick: () => setPopupBox(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-box\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedMapMarkers.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addToItinerary(selectedMapMarkers.name),\n          children: \"Add to Itinerary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPopupBox(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(LoadMap, \"iK7jSU06kHzO2Od9l5cujOnN1bo=\");\n_c = LoadMap;\nexport default LoadMap;\nvar _c;\n$RefreshReg$(_c, \"LoadMap\");","map":{"version":3,"names":["React","useState","useRef","GoogleMap","LoadScript","Marker","axios","jsxDEV","_jsxDEV","LoadMap","_s","containerStyle","width","height","defaultCentre","lat","lng","location","setLocation","mapMarkers","setMapMarkers","selectedMapMarkers","setSelectedMapMarkers","PopupBox","setPopupBox","centre","setCentre","mapRef","newLocation","e","target","value","fetchOSMWheelchairAccessiblePlaces","lon","overpassQuery","response","fetch","method","body","data","json","markers","elements","map","element","_element$tags","coords","type","center","name","tags","error","console","submitForm","preventDefault","geocoder","window","google","maps","Geocoder","geocode","address","results","status","length","geometry","accessibleMarkers","alert","addToItinerary","placeName","post","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","mapContainerStyle","zoom","onLoad","current","marker","index","position","onClick","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/LoadMap.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport './Styles/LoadMap.css';\nimport axios from 'axios';\n\nfunction LoadMap() {\n  const containerStyle = {\n    width: '100%',\n    height: '650px'\n  };\n\n  const defaultCentre = {\n    lat: 51.5074456,\n    lng: -0.1277653\n  };\n\n  const [location, setLocation] = useState('');\n  const [mapMarkers, setMapMarkers] = useState([]);\n  const [selectedMapMarkers, setSelectedMapMarkers] = useState(null);\n  const [PopupBox, setPopupBox] = useState(false);\n  const [centre, setCentre] = useState(defaultCentre);\n  const mapRef = useRef(null);\n\n  const newLocation = (e) => {\n    setLocation(e.target.value);\n  };\n\n  const fetchOSMWheelchairAccessiblePlaces = async (lat, lon) => {\n    const overpassQuery = `\n      [out:json];\n      (\n        node[wheelchair=\"yes\"](around:5000,${lat},${lon});\n        way[wheelchair=\"yes\"](around:5000,${lat},${lon});\n        relation[wheelchair=\"yes\"](around:5000,${lat},${lon});\n      );\n      out center;\n    `;\n\n    try {\n      const response = await fetch(\"https://overpass-api.de/api/interpreter\", {\n        method: \"POST\",\n        body: overpassQuery,\n      });\n\n      const data = await response.json();\n\n      const markers = data.elements.map((element) => {\n        const coords = element.type === \"node\"\n          ? { lat: element.lat, lng: element.lon }\n          : { lat: element.center.lat, lng: element.center.lon };\n\n        return {\n          lat: coords.lat,\n          lng: coords.lng,\n          name: element.tags?.name || \"Accessible Place\",\n        };\n      });\n\n      return markers;\n    } catch (error) {\n      console.error(\"Error fetching Overpass API data:\", error);\n      return [];\n    }\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n\n    const geocoder = new window.google.maps.Geocoder();\n\n    geocoder.geocode({ address: location }, async (results, status) => {\n      if (status === 'OK' && results.length > 0) {\n        const coords = results[0].geometry.location;\n        const lat = coords.lat();\n        const lng = coords.lng();\n\n        setCentre({ lat, lng });\n\n        // Fetch only wheelchair accessible places from OSM\n        const accessibleMarkers = await fetchOSMWheelchairAccessiblePlaces(lat, lng);\n        setMapMarkers(accessibleMarkers);\n\n      } else {\n        alert('Location not found.');\n      }\n    });\n  };\n\n  const addToItinerary = async (placeName) => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/addToItinerary/\", { name: placeName });\n      alert(response.data.message || \"Added to itinerary\");\n    } catch (error) {\n      console.error(error);\n      alert(\"We were unable to add attraction\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Find Wheelchair Accessible Activities</h1>\n      <form onSubmit={submitForm}>\n        <div className=\"location\">\n          <label>Location:</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your Location\"\n            value={location}\n            onChange={newLocation}\n            required\n          />\n          <button className=\"submit-button\" type=\"submit\">Search</button>\n        </div>\n      </form>\n\n      <LoadScript\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\n        libraries={['places']}\n      >\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={centre}\n          zoom={12}\n          onLoad={map => (mapRef.current = map)}\n        >\n          {mapMarkers.map((marker, index) => (\n            <Marker\n              key={index}\n              position={{ lat: marker.lat, lng: marker.lng }}\n              onClick={() => {\n                setSelectedMapMarkers(marker);\n                setPopupBox(true);\n              }}\n            />\n          ))}\n        </GoogleMap>\n      </LoadScript>\n\n      {PopupBox && selectedMapMarkers && (\n        <div className=\"modal-backdrop\" onClick={() => setPopupBox(false)}>\n          <div className=\"modal-box\" onClick={e => e.stopPropagation()}>\n            <h2>{selectedMapMarkers.name}</h2>\n            <button onClick={() => addToItinerary(selectedMapMarkers.name)}>Add to Itinerary</button>\n            <button onClick={() => setPopupBox(false)}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LoadMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}