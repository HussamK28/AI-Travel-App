{"ast":null,"code":"var _jsxFileName = \"/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/LoadMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport './Styles/LoadMap.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadMap() {\n  _s();\n  const containerStyle = {\n    width: '100%',\n    height: '650px'\n  };\n  const defaultCentre = {\n    lat: 51.5074456,\n    lng: -0.1277653\n  };\n  const [location, setLocation] = useState('');\n  const [mapMarkers, setMapMarkers] = useState([]);\n  const [selectedMapMarkers, setSelectedMapMarkers] = useState(null);\n  const [PopupBox, setPopupBox] = useState(false);\n  const [centre, setCentre] = useState(defaultCentre);\n  const mapRef = useRef(null);\n  const newLocation = e => {\n    setLocation(e.target.value);\n  };\n  const fetchOverpassData = async (lat, lng) => {\n    const radius = 500;\n    const url = `https://overpass-api.de/api/interpreter?data=[out:json];(node(around:${radius},${lat},${lng})[\"wheelchair\"];way(around:${radius},${lat},${lng})[\"wheelchair\"];relation(around:${radius},${lat},${lng})[\"wheelchair\"];);out center;`;\n    try {\n      const response = await axios.get(url);\n      const elements = response.data.elements || [];\n      return elements.map(el => {\n        var _el$center, _el$center2, _el$tags, _el$tags2, _el$tags3;\n        return {\n          lat: el.lat || ((_el$center = el.center) === null || _el$center === void 0 ? void 0 : _el$center.lat),\n          lng: el.lon || ((_el$center2 = el.center) === null || _el$center2 === void 0 ? void 0 : _el$center2.lon),\n          name: ((_el$tags = el.tags) === null || _el$tags === void 0 ? void 0 : _el$tags.name) || \"Unnamed OSM Place\",\n          address: \"From OpenStreetMap\",\n          wheelchair: ((_el$tags2 = el.tags) === null || _el$tags2 === void 0 ? void 0 : _el$tags2.wheelchair) || \"Unknown (OpenStreetMap)\",\n          wheelchairDescription: ((_el$tags3 = el.tags) === null || _el$tags3 === void 0 ? void 0 : _el$tags3[\"wheelchair:description\"]) || null,\n          source: \"OSM\"\n        };\n      });\n    } catch (error) {\n      console.error(\"Overpass API error:\", error);\n      return [];\n    }\n  };\n  const submitForm = async e => {\n    e.preventDefault();\n    const geocoder = new window.google.maps.Geocoder();\n    geocoder.geocode({\n      address: location\n    }, async (results, status) => {\n      if (status === 'OK' && results.length > 0) {\n        const coords = results[0].geometry.location;\n        const lat = coords.lat();\n        const lng = coords.lng();\n        setCentre({\n          lat,\n          lng\n        });\n        const service = new window.google.maps.places.PlacesService(mapRef.current);\n        const types = ['tourist_attraction', 'restaurant', 'museum', 'amusement_park', 'shopping_mall', 'park'];\n        const searchByType = type => {\n          return new Promise(resolve => {\n            const request = {\n              location: coords,\n              radius: 10000,\n              type: type\n            };\n            service.nearbySearch(request, (results, status) => {\n              if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n                const detailPromises = results.map(place => {\n                  return new Promise(res => {\n                    service.getDetails({\n                      placeId: place.place_id,\n                      fields: ['name', 'geometry', 'formatted_address', 'photo']\n                    }, (details, detailStatus) => {\n                      if (detailStatus === window.google.maps.places.PlacesServiceStatus.OK) {\n                        var _details$photos, _details$photos$;\n                        res({\n                          lat: details.geometry.location.lat(),\n                          lng: details.geometry.location.lng(),\n                          name: details.name,\n                          address: details.formatted_address,\n                          photo: ((_details$photos = details.photos) === null || _details$photos === void 0 ? void 0 : (_details$photos$ = _details$photos[0]) === null || _details$photos$ === void 0 ? void 0 : _details$photos$.getUrl({\n                            maxWidth: 400\n                          })) || null,\n                          wheelchair: 'Wheelchair Accessibility Information is not avaliable',\n                          source: \"Google\"\n                        });\n                      } else {\n                        res({\n                          lat: place.geometry.location.lat(),\n                          lng: place.geometry.location.lng(),\n                          name: place.name,\n                          address: 'No Address given',\n                          photo: 'No photo given',\n                          wheelchair: 'Wheelchair Accessibility Information is not avaliable',\n                          source: \"Google\"\n                        });\n                      }\n                    });\n                  });\n                });\n                Promise.all(detailPromises).then(resolve);\n              } else {\n                resolve([]);\n              }\n            });\n          });\n        };\n        const googleMarkersArrays = await Promise.all(types.map(searchByType));\n        const googleMarkers = googleMarkersArrays.flat();\n        const osmMarkers = await fetchOverpassData(lat, lng);\n\n        // Merge and show all\n        const allCombined = [...googleMarkers, ...osmMarkers];\n        setMapMarkers(allCombined);\n      } else {\n        alert('Location not found.');\n      }\n    });\n  };\n  const addToItinerary = async placeName => {\n    const userID = localStorage.getItem(\"userID\");\n    console.log(\"User ID\", userID);\n    if (!userID) {\n      alert(\"Please log in to add attraction\");\n    }\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/addToItinerary/\", {\n        name: placeName,\n        userID: userID\n      });\n      alert(response.data.message || \"Added to itinerary\");\n    } catch (error) {\n      console.error(error);\n      alert(\"We were unable to add attraction\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Find Activities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your Location\",\n          value: location,\n          onChange: newLocation,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      libraries: ['places'],\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: centre,\n        zoom: 13,\n        onLoad: map => mapRef.current = map,\n        children: mapMarkers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: marker.lat,\n            lng: marker.lng\n          },\n          onClick: () => {\n            setSelectedMapMarkers(marker);\n            setPopupBox(true);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), PopupBox && selectedMapMarkers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      onClick: () => setPopupBox(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-box\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: selectedMapMarkers.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedMapMarkers.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), selectedMapMarkers.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"marker-photo\",\n          src: selectedMapMarkers.photo,\n          alt: \"Place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Wheelchair Accessible: \", selectedMapMarkers.wheelchair]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), selectedMapMarkers.wheelchairDescription && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedMapMarkers.wheelchairDescription]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addToItinerary(selectedMapMarkers.name),\n          children: \"Add to Itinerary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPopupBox(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(LoadMap, \"iK7jSU06kHzO2Od9l5cujOnN1bo=\");\n_c = LoadMap;\nexport default LoadMap;\nvar _c;\n$RefreshReg$(_c, \"LoadMap\");","map":{"version":3,"names":["React","useState","useRef","GoogleMap","LoadScript","Marker","axios","jsxDEV","_jsxDEV","LoadMap","_s","containerStyle","width","height","defaultCentre","lat","lng","location","setLocation","mapMarkers","setMapMarkers","selectedMapMarkers","setSelectedMapMarkers","PopupBox","setPopupBox","centre","setCentre","mapRef","newLocation","e","target","value","fetchOverpassData","radius","url","response","get","elements","data","map","el","_el$center","_el$center2","_el$tags","_el$tags2","_el$tags3","center","lon","name","tags","address","wheelchair","wheelchairDescription","source","error","console","submitForm","preventDefault","geocoder","window","google","maps","Geocoder","geocode","results","status","length","coords","geometry","service","places","PlacesService","current","types","searchByType","type","Promise","resolve","request","nearbySearch","PlacesServiceStatus","OK","detailPromises","place","res","getDetails","placeId","place_id","fields","details","detailStatus","_details$photos","_details$photos$","formatted_address","photo","photos","getUrl","maxWidth","all","then","googleMarkersArrays","googleMarkers","flat","osmMarkers","allCombined","alert","addToItinerary","placeName","userID","localStorage","getItem","log","post","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","mapContainerStyle","zoom","onLoad","marker","index","position","onClick","stopPropagation","src","alt","_c","$RefreshReg$"],"sources":["/Users/hussamkhan/Desktop/AI-Travel-App/Frontend/src/LoadMap.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport './Styles/LoadMap.css'\nimport axios from 'axios';\n\nfunction LoadMap() {\n  const containerStyle = {\n    width: '100%',\n    height: '650px'\n  };\n\n  const defaultCentre = {\n    lat: 51.5074456,\n    lng: -0.1277653\n  };\n\n  const [location, setLocation] = useState('');\n  const [mapMarkers, setMapMarkers] = useState([]);\n  const [selectedMapMarkers, setSelectedMapMarkers] = useState(null);\n  const [PopupBox, setPopupBox] = useState(false);\n  const [centre, setCentre] = useState(defaultCentre);\n  const mapRef = useRef(null);\n\n  const newLocation = (e) => {\n    setLocation(e.target.value);\n  };\n\n  const fetchOverpassData = async (lat, lng) => {\n    const radius = 500;\n    const url = `https://overpass-api.de/api/interpreter?data=[out:json];(node(around:${radius},${lat},${lng})[\"wheelchair\"];way(around:${radius},${lat},${lng})[\"wheelchair\"];relation(around:${radius},${lat},${lng})[\"wheelchair\"];);out center;`;\n\n    try {\n      const response = await axios.get(url);\n      const elements = response.data.elements || [];\n      return elements.map(el => ({\n        lat: el.lat || el.center?.lat,\n        lng: el.lon || el.center?.lon,\n        name: el.tags?.name || \"Unnamed OSM Place\",\n        address: \"From OpenStreetMap\",\n        wheelchair: el.tags?.wheelchair || \"Unknown (OpenStreetMap)\",\n        wheelchairDescription: el.tags?.[\"wheelchair:description\"] || null,\n        source: \"OSM\"\n      }));\n    } catch (error) {\n      console.error(\"Overpass API error:\", error);\n      return [];\n    }\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n\n    const geocoder = new window.google.maps.Geocoder();\n\n    geocoder.geocode({ address: location }, async (results, status) => {\n      if (status === 'OK' && results.length > 0) {\n        const coords = results[0].geometry.location;\n        const lat = coords.lat();\n        const lng = coords.lng();\n        setCentre({ lat, lng });\n\n        const service = new window.google.maps.places.PlacesService(mapRef.current);\n        const types = ['tourist_attraction', 'restaurant', 'museum', 'amusement_park', 'shopping_mall', 'park'];\n\n        const searchByType = (type) => {\n          return new Promise((resolve) => {\n            const request = {\n              location: coords,\n              radius: 10000,\n              type: type,\n            };\n\n            service.nearbySearch(request, (results, status) => {\n              if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n                const detailPromises = results.map(place => {\n                  return new Promise((res) => {\n                    service.getDetails(\n                      {\n                        placeId: place.place_id,\n                        fields: ['name', 'geometry', 'formatted_address', 'photo'],\n                      },\n                      (details, detailStatus) => {\n                        if (detailStatus === window.google.maps.places.PlacesServiceStatus.OK) {\n                          res({\n                            lat: details.geometry.location.lat(),\n                            lng: details.geometry.location.lng(),\n                            name: details.name,\n                            address: details.formatted_address,\n                            photo: details.photos?.[0]?.getUrl({ maxWidth: 400 }) || null,\n                            wheelchair: 'Wheelchair Accessibility Information is not avaliable',\n                            source: \"Google\"\n                          });\n                        } else {\n                          res({\n                            lat: place.geometry.location.lat(),\n                            lng: place.geometry.location.lng(),\n                            name: place.name,\n                            address: 'No Address given',\n                            photo: 'No photo given',\n                            wheelchair: 'Wheelchair Accessibility Information is not avaliable',\n                            source: \"Google\"\n                          });\n                        }\n                      }\n                    );\n                  });\n                });\n\n                Promise.all(detailPromises).then(resolve);\n              } else {\n                resolve([]);\n              }\n            });\n          });\n        };\n\n        const googleMarkersArrays = await Promise.all(types.map(searchByType));\n        const googleMarkers = googleMarkersArrays.flat();\n\n        const osmMarkers = await fetchOverpassData(lat, lng);\n\n        // Merge and show all\n        const allCombined = [...googleMarkers, ...osmMarkers];\n        setMapMarkers(allCombined);\n      } else {\n        alert('Location not found.');\n      }\n    });\n  };\n\n  const addToItinerary = async (placeName) => {\n    const userID = localStorage.getItem(\"userID\")\n    console.log(\"User ID\", userID)\n    if (!userID) {\n      alert(\"Please log in to add attraction\")\n    }\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/addToItinerary/\", { name: placeName, userID: userID });\n      alert(response.data.message || \"Added to itinerary\");\n    } catch (error) {\n      console.error(error);\n      alert(\"We were unable to add attraction\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Find Activities</h1>\n      <form onSubmit={submitForm}>\n        <div className=\"location\">\n          <label>Location:</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your Location\"\n            value={location}\n            onChange={newLocation}\n            required\n          />\n          <button className=\"submit-button\" type=\"submit\">Search</button>\n        </div>\n      </form>\n\n      <LoadScript\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}\n        libraries={['places']}\n      >\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={centre}\n          zoom={13}\n          onLoad={map => (mapRef.current = map)}\n        >\n          {mapMarkers.map((marker, index) => (\n            <Marker\n              key={index}\n              position={{ lat: marker.lat, lng: marker.lng }}\n              onClick={() => {\n                setSelectedMapMarkers(marker);\n                setPopupBox(true);\n              }}\n            />\n          ))}\n        </GoogleMap>\n      </LoadScript>\n\n      {PopupBox && selectedMapMarkers && (\n        <div className=\"modal-backdrop\" onClick={() => setPopupBox(false)}>\n          <div className=\"modal-box\" onClick={e => e.stopPropagation()}>\n            <h1>{selectedMapMarkers.name}</h1>\n            <h2>{selectedMapMarkers.address}</h2>\n\n            {selectedMapMarkers.photo && (\n              <img className=\"marker-photo\" src={selectedMapMarkers.photo} alt=\"Place\" />\n            )}\n\n            <h3>Wheelchair Accessible: {selectedMapMarkers.wheelchair}</h3>\n\n            {selectedMapMarkers.wheelchairDescription && (\n              <p>Description: {selectedMapMarkers.wheelchairDescription}</p>\n            )}\n\n            <button onClick={() => addToItinerary(selectedMapMarkers.name)}>Add to Itinerary</button>\n            <button onClick={() => setPopupBox(false)}>Close</button>\n          </div>\n\n        </div>\n      )}\n\n    </div>\n  );\n}\n\nexport default LoadMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}